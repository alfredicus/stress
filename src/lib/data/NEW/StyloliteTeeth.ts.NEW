import { deg2rad, spherical2unitVectorCartesian } from "../types/math"
import { DataParameters } from "./Data"
import { StyloliteInterface } from "./StyloliteInterface"
import { SphericalCoords } from "../types/SphericalCoords"

/**
 * This class inherits not from Data but rather from StyloliteInterface.
 * This means that the check() and cost() methods are already implemented (in
 * the right way). Only this.normal is important here, which is computed through
 * the private method styloliteTeethSphericalCoords.
 * @category Data
 */
export class StyloliteTeeth extends StyloliteInterface {
    private coordinates: SphericalCoords = new SphericalCoords()
    private stylolite_teeth_plunge = 0
    private stylolite_teeth_trend = 0

    initialize(params: DataParameters): boolean {
        if (Number.isNaN(params.stylolite_teeth_trend)) {
            throw new Error('Missing trend angle for Stylolite Teeth')
        }
        if (Number.isNaN(params.stylolite_teeth_plunge)) {
            throw new Error('Missing plunge angle for Stylolite Teeth')
        }

        this.stylolite_teeth_plunge = params.stylolite_teeth_plunge
        this.stylolite_teeth_trend = params.stylolite_teeth_trend
        this.styloliteTeethSphericalCoords()
        return true
    }

    // Each stylolite teeth is defined by a set of two parameters as follows:
    //      Stylolite teeth trend: clockwise angle measured from the North direction [0, 360)
    //      Stylolite teeth plunge: inclination angle relative to the horizontal in interval [0, 90] (positive downward)

    // (phi,theta) : spherical coordinate angles defining the unit vector parallel to the stylolite teeth (pointing downward)
    //                 in the geographic reference system: S = (X,Y,Z) = (E,N,Up)

    // phi : azimuthal angle in interval [0, 2 PI), measured anticlockwise from the X axis (East direction) in reference system S
    // theta: colatitude or polar angle in interval [0, PI], measured downward from the zenith (upward direction)

    private styloliteTeethSphericalCoords(): void {

        // The polar angle (or colatitude) theta is calculated in radians from the plunge of the stylolite teeth:
        this.coordinates.theta = deg2rad( this.stylolite_teeth_plunge ) + Math.PI / 2

        // The azimuthal angle is calculated in radians from the trend of the stylolite teeth :
        //      trend + phi = PI / 2 
        this.coordinates.phi = deg2rad( 90 - this.stylolite_teeth_trend )

        if  ( this.stylolite_teeth_trend > 90 ) {
            // phi < 0
            this.coordinates.phi = this.coordinates.phi + 2 * Math.PI
        }
        // The unit vector parallel to the stylolite teeth is defined by angles (phi, theta) in spherical coordinates.
        // normal: unit vector parallel to the stylolite teeth (pointing downward) defined in the geographic reference system: S = (X,Y,Z)
        this.normal = spherical2unitVectorCartesian(this.coordinates)       
    }
}

